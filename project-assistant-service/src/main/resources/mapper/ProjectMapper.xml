<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.timelordtty.projectassistant.mapper.ProjectMapper">
    
    <resultMap id="ProjectResultMap" type="com.timelordtty.projectassistant.entity.Project">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="startDate" column="start_date"/>
        <result property="endDate" column="end_date"/>
        <result property="manager" column="manager"/>
        <result property="status" column="status"/>
        <result property="budget" column="budget"/>
        <result property="priority" column="priority"/>
        <result property="createdTime" column="created_time"/>
        <result property="updatedTime" column="updated_time"/>
    </resultMap>
    
    <sql id="Base_Column_List">
        id, name, description, start_date, end_date, manager, status, budget, priority, created_time, updated_time
    </sql>
    
    <select id="findAll" resultMap="ProjectResultMap">
        select 
        <include refid="Base_Column_List" />
        from project
        order by created_time desc
    </select>
    
    <select id="findById" resultMap="ProjectResultMap" parameterType="long">
        select 
        <include refid="Base_Column_List" />
        from project
        where id = #{id}
    </select>
    
    <insert id="insert" parameterType="com.timelordtty.projectassistant.entity.Project" useGeneratedKeys="true" keyProperty="id">
        insert into project (
            name, description, start_date, end_date, manager, 
            status, budget, priority
        ) values (
            #{name}, #{description}, #{startDate}, #{endDate}, #{manager}, 
            #{status}, #{budget}, #{priority}
        )
    </insert>
    
    <update id="update" parameterType="com.timelordtty.projectassistant.entity.Project">
        update project
        set name = #{name},
            description = #{description},
            start_date = #{startDate},
            end_date = #{endDate},
            manager = #{manager},
            status = #{status},
            budget = #{budget},
            priority = #{priority}
        where id = #{id}
    </update>
    
    <delete id="deleteById" parameterType="long">
        delete from project where id = #{id}
    </delete>
</mapper> 