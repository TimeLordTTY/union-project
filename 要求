双模式向导界面（JavaFX实现）
markdown
复制
[模板创建模式]                  [数据录入模式]
┌───────────────────────┐     ┌─────────────────────┐
│ 模板类型选择           ▼     │ Excel风格表格编辑器 ▼
│ ○ Word文档 ○ Excel表格       │ 姓名   | 年龄 | 部门
├───────────────────────┤     ├─────────────────────┤
│ 字段定义：             │     │ 张三   | 28  | 技术部 │
│ - 姓名 [添加字段按钮]  │     │ 李四   | 25  | 市场部 │
└───────────────────────┘     └─────────────────────┘
2. 智能模板生成
Word模板：自动创建含{{字段}}的标准表格模板

Excel模板：生成带{{标题}}的首行冻结表格

自动保存为.docx/.xlsx格式

3. 傻瓜式数据录入
类Excel表格编辑器（支持复制粘贴）

自动校验数据类型（数字/文本格式高亮）

一键导出为标准化数据文件（.xlsx）

Cursor提示词方案
markdown
复制
请用Java编写满足以下需求的程序：

开发一个模板&数据生成工具，要求：

1. 主界面（JavaFX）
   - 采用TabPane分两个功能模块
   - 左侧模板生成器，右侧数据录入器
   - 使用FXML+CSS实现现代化界面

2. 模板生成模块
   - 包含以下控件：
     * 文件类型选择RadioButton
     * 字段列表ListView(带添加/删除按钮)
     * 生成模板按钮
   - 点击生成时：
     * 使用Apache POI创建.docx/.xlsx文件
     * 在Word中生成3xN的表格(字段名+{{字段名}})
     * 在Excel中创建带冻结首行的工作表

3. 数据录入模块
   - 实现类似Excel的TableView：
     * 动态列生成（根据模板字段）
     * 右键菜单支持复制/粘贴行
     * 自动保存为标准化.xlsx文件
   - 数据校验：
     * 数字列自动过滤非数字输入
     * 空单元格红色高亮提示

4. 智能联动功能
   - 选择模板文件后自动加载字段到数据录入器
   - 生成数据文件时自动添加时间戳命名
   - 最近使用文件历史记录（最多5条）

5. 辅助功能
   - 提供示例模板快速生成按钮
   - 字段拖拽排序功能
   - 实时保存草稿功能

技术栈要求：
- Java 17 + JavaFX 17
- Apache POI 5.2.3
- ControlsFX 11.1.1

代码要求：
1. 采用MVVM模式分离逻辑
2. 包含以下自定义组件：
   - 可编辑TableView（支持动态列）
   - 字段管理面板
3. 实现文件操作服务类

用户的女朋友需要一个工具来设计模板（比如在Word或Excel中插入占位符）和输入数据，而不需要手动处理JSON或复杂的格式。

用户现在希望这个工具是Java语言，使用JavaFX作为界面。之前的回复可能误解了需求，现在需要调整方向。需要设计两个主要功能：模板创建和数据输入，同时确保用户界面简单易用，无需编程知识。

接下来，我需要考虑如何用JavaFX实现这些功能。对于模板创建部分，可能需要一个可视化的模板编辑器，让用户可以在界面上直接设置占位符的位置，比如在Word或Excel中标记字段。但Java处理Word和Excel可能需要特定的库，比如Apache POI。但用户提到生成模板，可能需要让用户通过界面设计模板的结构，比如定义字段名，然后生成对应的模板文件，比如带有{{字段名}}的Word或Excel文件。

数据输入部分需要用户能够以表格形式输入数据，类似于Excel，然后保存为结构化的格式，比如JSON或Excel，但用户希望避免使用JSON，所以可能需要直接生成Excel数据文件，每一列对应一个字段，行对应记录。

考虑到用户的女朋友可能不熟悉编程概念，界面需要极其简单，可能分为两个主要部分：模板创建和数据输入，通过标签页或向导式步骤引导用户完成。

需要确保生成的模板文件和数据文件能够被之前的文档生成程序（如果有的话）正确使用。如果之前的程序是基于Python的，可能需要确保生成的文件格式兼容，比如模板中的占位符格式一致，数据文件的结构正确。

异常处理和用户提示也很重要，比如检查字段是否重复，数据是否填写完整，保存路径的选择等。同时，可能需要提供示例或向导帮助用户创建模板。

在技术实现上，JavaFX适合构建图形界面，可以使用TableView来展示和编辑数据输入部分。模板创建部分可能需要用户输入字段名，然后生成对应的模板文件，或者提供示例模板供下载。

需要确定模板的存储方式，比如用户创建模板后保存为.docx或.xlsx，并在其中自动插入占位符。这可能需要使用Apache POI库来操作Word和Excel文件，生成带有{{字段名}}的模板。

最后，打包成可执行文件，方便用户直接运行，无需安装复杂环境。可能需要使用Maven或Gradle来管理依赖，特别是Apache POI和JavaFX的相关库。

总结步骤：

1. 使用JavaFX创建用户界面，分为模板创建和数据输入两部分。

2. 模板创建：让用户定义字段名，生成对应的Word/Excel模板文件，包含占位符。

3. 数据输入：提供表格界面，用户输入数据，保存为Excel文件。

4. 异常处理：检查输入有效性，提示错误。

5. 提供示例和向导，降低学习成本。

6. 使用Apache POI生成模板文件，处理Excel数据保存。

7. 打包为可执行JAR或使用jpackage生成安装程序。

需要确认用户是否需要同时生成模板和数据，或者只是其中之一。根据用户描述，应该是让女朋友能够创建模板和输入数据，所以程序需要两个主要功能模块。同时，确保生成的文件格式与之前的文档生成程序兼容，如果之前已经有的话。

另外，用户提到的“生成模板和数据”可能是指生成带有占位符的模板文件，以及结构化的数据文件，如Excel，这样后续的文档生成程序可以读取这些文件来批量生成文档。因此，当前程序的目标是简化模板和数据文件的创建过程，而不是生成最终的文档。